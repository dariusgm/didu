name: Rust Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        override: true

    - name: Test
      uses: actions-rs/cargo@v1
      with:
        command: test

    - name: Install Tarpaulin (Ubuntu only)
      if: matrix.os == 'ubuntu-latest'
      run: cargo install cargo-tarpaulin

    - name: Run Tarpaulin for code coverage (Ubuntu only)
      if: matrix.os == 'ubuntu-latest'
      run: cargo tarpaulin --out xml

    - name: Upload coverage to Codecov (Ubuntu only)
      if: matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v1
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        file: ./cobertura.xml

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release

    - name: Upload artifact for unix systems
      if: matrix.os != 'windows-latest'
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-executable
        path: target/release/didu

    - name: Upload artifact for windows systems
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-executable
        path: target/release/didu.exe
